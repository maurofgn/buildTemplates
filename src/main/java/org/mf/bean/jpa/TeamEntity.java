/*
 * Created on 29 lug 2016 ( Time 14:37:00 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.mf.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "team"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="team", catalog="torneo" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TeamEntity.countAll", query="SELECT COUNT(x) FROM TeamEntity x" )
} )
public class TeamEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="nome", length=50)
    private String     nome         ;

    @Column(name="citta", length=50)
    private String     citta        ;

    @Column(name="accompagnatore", length=50)
    private String     accompagnatore ;

	// "gironiId" (column "gironi_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="teamA", targetEntity=MatchEntity.class)
    private List<MatchEntity> listOfMatchA ;

    @OneToMany(mappedBy="teamB", targetEntity=MatchEntity.class)
    private List<MatchEntity> listOfMatchB ;

    @ManyToOne
    @JoinColumn(name="gironi_id", referencedColumnName="id")
    private GironiEntity gironi      ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TeamEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : nome ( CHAR ) 
    public void setNome( String nome ) {
        this.nome = nome;
    }
    public String getNome() {
        return this.nome;
    }

    //--- DATABASE MAPPING : citta ( CHAR ) 
    public void setCitta( String citta ) {
        this.citta = citta;
    }
    public String getCitta() {
        return this.citta;
    }

    //--- DATABASE MAPPING : accompagnatore ( CHAR ) 
    public void setAccompagnatore( String accompagnatore ) {
        this.accompagnatore = accompagnatore;
    }
    public String getAccompagnatore() {
        return this.accompagnatore;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfMatchA( List<MatchEntity> listOfMatchA ) {
        this.listOfMatchA = listOfMatchA;
    }
    public List<MatchEntity> getListOfMatchA() {
        return this.listOfMatchA;
    }

    public void setListOfMatchB( List<MatchEntity> listOfMatchB ) {
        this.listOfMatchB = listOfMatchB;
    }
    public List<MatchEntity> getListOfMatchB() {
        return this.listOfMatchB;
    }

    public void setGironi( GironiEntity gironi ) {
        this.gironi = gironi;
    }
    public GironiEntity getGironi() {
        return this.gironi;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(nome);
        sb.append("|");
        sb.append(citta);
        sb.append("|");
        sb.append(accompagnatore);
        return sb.toString(); 
    } 

}
