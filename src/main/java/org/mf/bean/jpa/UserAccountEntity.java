/*
 * Created on 29 lug 2016 ( Time 14:37:00 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.mf.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "user_account"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="user_account", catalog="torneo" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="UserAccountEntity.countAll", query="SELECT COUNT(x) FROM UserAccountEntity x" )
} )
public class UserAccountEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Long       id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="email", length=255)
    private String     email        ;

    @Column(name="enabled", nullable=false)
    private Boolean    enabled      ;

    @Column(name="firstName", length=255)
    private String     firstname    ;

    @Column(name="lastName", length=255)
    private String     lastname     ;

    @Column(name="password", length=60)
    private String     password     ;

    @Column(name="attempt", nullable=false)
    private Integer    attempt      ;

    @Temporal(TemporalType.DATE)
    @Column(name="last_access")
    private Date       lastAccess   ;

    @Temporal(TemporalType.DATE)
    @Column(name="last_change_password")
    private Date       lastChangePassword ;

    @Column(name="state", length=20)
    private String     state        ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    @OneToMany(mappedBy="userAccount", targetEntity=IscrizioniEntity.class)
    private List<IscrizioniEntity> listOfIscrizioni;

    @OneToMany(mappedBy="userAccount", targetEntity=PasswordresettokenEntity.class)
    private List<PasswordresettokenEntity> listOfPasswordresettoken;

    @OneToMany(mappedBy="userAccount", targetEntity=SocietaEntity.class)
    private List<SocietaEntity> listOfSocieta;

    @OneToMany(mappedBy="userAccount", targetEntity=VerificationtokenEntity.class)
    private List<VerificationtokenEntity> listOfVerificationtoken;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public UserAccountEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Long id ) {
        this.id = id ;
    }
    public Long getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : email ( VARCHAR ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }

    //--- DATABASE MAPPING : enabled ( BIT ) 
    public void setEnabled( Boolean enabled ) {
        this.enabled = enabled;
    }
    public Boolean getEnabled() {
        return this.enabled;
    }

    //--- DATABASE MAPPING : firstName ( VARCHAR ) 
    public void setFirstname( String firstname ) {
        this.firstname = firstname;
    }
    public String getFirstname() {
        return this.firstname;
    }

    //--- DATABASE MAPPING : lastName ( VARCHAR ) 
    public void setLastname( String lastname ) {
        this.lastname = lastname;
    }
    public String getLastname() {
        return this.lastname;
    }

    //--- DATABASE MAPPING : password ( VARCHAR ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : attempt ( INT ) 
    public void setAttempt( Integer attempt ) {
        this.attempt = attempt;
    }
    public Integer getAttempt() {
        return this.attempt;
    }

    //--- DATABASE MAPPING : last_access ( DATE ) 
    public void setLastAccess( Date lastAccess ) {
        this.lastAccess = lastAccess;
    }
    public Date getLastAccess() {
        return this.lastAccess;
    }

    //--- DATABASE MAPPING : last_change_password ( DATE ) 
    public void setLastChangePassword( Date lastChangePassword ) {
        this.lastChangePassword = lastChangePassword;
    }
    public Date getLastChangePassword() {
        return this.lastChangePassword;
    }

    //--- DATABASE MAPPING : state ( VARCHAR ) 
    public void setState( String state ) {
        this.state = state;
    }
    public String getState() {
        return this.state;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    public void setListOfIscrizioni( List<IscrizioniEntity> listOfIscrizioni ) {
        this.listOfIscrizioni = listOfIscrizioni;
    }
    public List<IscrizioniEntity> getListOfIscrizioni() {
        return this.listOfIscrizioni;
    }

    public void setListOfPasswordresettoken( List<PasswordresettokenEntity> listOfPasswordresettoken ) {
        this.listOfPasswordresettoken = listOfPasswordresettoken;
    }
    public List<PasswordresettokenEntity> getListOfPasswordresettoken() {
        return this.listOfPasswordresettoken;
    }

    public void setListOfSocieta( List<SocietaEntity> listOfSocieta ) {
        this.listOfSocieta = listOfSocieta;
    }
    public List<SocietaEntity> getListOfSocieta() {
        return this.listOfSocieta;
    }

    public void setListOfVerificationtoken( List<VerificationtokenEntity> listOfVerificationtoken ) {
        this.listOfVerificationtoken = listOfVerificationtoken;
    }
    public List<VerificationtokenEntity> getListOfVerificationtoken() {
        return this.listOfVerificationtoken;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(email);
        sb.append("|");
        sb.append(enabled);
        sb.append("|");
        sb.append(firstname);
        sb.append("|");
        sb.append(lastname);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(attempt);
        sb.append("|");
        sb.append(lastAccess);
        sb.append("|");
        sb.append(lastChangePassword);
        sb.append("|");
        sb.append(state);
        return sb.toString(); 
    } 

}
