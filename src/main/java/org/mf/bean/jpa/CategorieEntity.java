/*
 * Created on 28 lug 2016 ( Time 16:43:51 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.mf.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "categorie"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="categorie", catalog="torneo" )
// Define named queries here
@NamedQueries ( {
	  @NamedQuery ( name="CategorieEntity.countAll", query="SELECT COUNT(x) FROM CategorieEntity x" )
	  ,@NamedQuery ( name="CategorieEntity.likeName", query="SELECT x FROM CategorieEntity x where x.categoria like :name" )
} )
public class CategorieEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="categoria", length=30)
    private String     categoria    ;

    @Column(name="annomin")
    private Integer    annomin      ;

    @Column(name="annomax")
    private Integer    annomax      ;

    @Column(name="punti")
    private Integer    punti        ;

    @Column(name="puntimax")
    private Integer    puntimax     ;

    @Column(name="nrset")
    private Integer    nrset        ;

    @Column(name="note", length=255)
    private String     note         ;

    @Column(name="active", nullable=false)
    private Boolean    active       ;

    @Column(name="categoriecol", length=45)
    private String     categoriecol ;

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public CategorieEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : categoria ( CHAR ) 
    public void setCategoria( String categoria ) {
        this.categoria = categoria;
    }
    public String getCategoria() {
        return this.categoria;
    }

    //--- DATABASE MAPPING : annomin ( INT ) 
    public void setAnnomin( Integer annomin ) {
        this.annomin = annomin;
    }
    public Integer getAnnomin() {
        return this.annomin;
    }

    //--- DATABASE MAPPING : annomax ( INT ) 
    public void setAnnomax( Integer annomax ) {
        this.annomax = annomax;
    }
    public Integer getAnnomax() {
        return this.annomax;
    }

    //--- DATABASE MAPPING : punti ( INT ) 
    public void setPunti( Integer punti ) {
        this.punti = punti;
    }
    public Integer getPunti() {
        return this.punti;
    }

    //--- DATABASE MAPPING : puntimax ( INT ) 
    public void setPuntimax( Integer puntimax ) {
        this.puntimax = puntimax;
    }
    public Integer getPuntimax() {
        return this.puntimax;
    }

    //--- DATABASE MAPPING : nrset ( INT ) 
    public void setNrset( Integer nrset ) {
        this.nrset = nrset;
    }
    public Integer getNrset() {
        return this.nrset;
    }

    //--- DATABASE MAPPING : note ( VARCHAR ) 
    public void setNote( String note ) {
        this.note = note;
    }
    public String getNote() {
        return this.note;
    }

    //--- DATABASE MAPPING : active ( BIT ) 
    public void setActive( Boolean active ) {
        this.active = active;
    }
    public Boolean getActive() {
        return this.active;
    }

    //--- DATABASE MAPPING : categoriecol ( VARCHAR ) 
    public void setCategoriecol( String categoriecol ) {
        this.categoriecol = categoriecol;
    }
    public String getCategoriecol() {
        return this.categoriecol;
    }

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(categoria);
        sb.append("|");
        sb.append(annomin);
        sb.append("|");
        sb.append(annomax);
        sb.append("|");
        sb.append(punti);
        sb.append("|");
        sb.append(puntimax);
        sb.append("|");
        sb.append(nrset);
        sb.append("|");
        sb.append(note);
        sb.append("|");
        sb.append(active);
        sb.append("|");
        sb.append(categoriecol);
        return sb.toString(); 
    } 

}
