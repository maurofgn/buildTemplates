/*
 * Created on 29 lug 2016 ( Time 14:37:00 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.mf.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "societa"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="societa", catalog="torneo" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="SocietaEntity.countAll", query="SELECT COUNT(x) FROM SocietaEntity x" )
} )
public class SocietaEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="nome", length=50)
    private String     nome         ;

    @Column(name="responsabile", length=50)
    private String     responsabile ;

    @Column(name="via", length=50)
    private String     via          ;

    @Column(name="cap")
    private Integer    cap          ;

    @Column(name="citta", length=50)
    private String     citta        ;

    @Column(name="provincia", length=5)
    private String     provincia    ;

    @Column(name="nazione", length=50)
    private String     nazione      ;

    @Column(name="tel", length=30)
    private String     tel          ;

    @Column(name="fax", length=30)
    private String     fax          ;

    @Column(name="cellulare", length=30)
    private String     cellulare    ;

    @Column(name="email", length=30)
    private String     email        ;

    @Column(name="url", length=30)
    private String     url          ;

    @Column(name="logo", length=45)
    private String     logo         ;

	// "userAccountId" (column "user_account_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="societaGuest", targetEntity=FriendEntity.class)
    private List<FriendEntity> listOfFriendGuest;

    @OneToMany(mappedBy="societa", targetEntity=IscrizioniEntity.class)
    private List<IscrizioniEntity> listOfIscrizioni;

    @ManyToOne
    @JoinColumn(name="user_account_id", referencedColumnName="id")
    private UserAccountEntity userAccount ;

    @OneToMany(mappedBy="societaHost", targetEntity=FriendEntity.class)
    private List<FriendEntity> listOfFriendHost;

    @OneToMany(mappedBy="societa", targetEntity=TorneoEntity.class)
    private List<TorneoEntity> listOfTorneo;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public SocietaEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : nome ( CHAR ) 
    public void setNome( String nome ) {
        this.nome = nome;
    }
    public String getNome() {
        return this.nome;
    }

    //--- DATABASE MAPPING : responsabile ( CHAR ) 
    public void setResponsabile( String responsabile ) {
        this.responsabile = responsabile;
    }
    public String getResponsabile() {
        return this.responsabile;
    }

    //--- DATABASE MAPPING : via ( CHAR ) 
    public void setVia( String via ) {
        this.via = via;
    }
    public String getVia() {
        return this.via;
    }

    //--- DATABASE MAPPING : cap ( INT ) 
    public void setCap( Integer cap ) {
        this.cap = cap;
    }
    public Integer getCap() {
        return this.cap;
    }

    //--- DATABASE MAPPING : citta ( CHAR ) 
    public void setCitta( String citta ) {
        this.citta = citta;
    }
    public String getCitta() {
        return this.citta;
    }

    //--- DATABASE MAPPING : provincia ( CHAR ) 
    public void setProvincia( String provincia ) {
        this.provincia = provincia;
    }
    public String getProvincia() {
        return this.provincia;
    }

    //--- DATABASE MAPPING : nazione ( CHAR ) 
    public void setNazione( String nazione ) {
        this.nazione = nazione;
    }
    public String getNazione() {
        return this.nazione;
    }

    //--- DATABASE MAPPING : tel ( CHAR ) 
    public void setTel( String tel ) {
        this.tel = tel;
    }
    public String getTel() {
        return this.tel;
    }

    //--- DATABASE MAPPING : fax ( CHAR ) 
    public void setFax( String fax ) {
        this.fax = fax;
    }
    public String getFax() {
        return this.fax;
    }

    //--- DATABASE MAPPING : cellulare ( CHAR ) 
    public void setCellulare( String cellulare ) {
        this.cellulare = cellulare;
    }
    public String getCellulare() {
        return this.cellulare;
    }

    //--- DATABASE MAPPING : email ( CHAR ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }

    //--- DATABASE MAPPING : url ( CHAR ) 
    public void setUrl( String url ) {
        this.url = url;
    }
    public String getUrl() {
        return this.url;
    }

    //--- DATABASE MAPPING : logo ( VARCHAR ) 
    public void setLogo( String logo ) {
        this.logo = logo;
    }
    public String getLogo() {
        return this.logo;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfFriendGuest( List<FriendEntity> listOfFriendGuest ) {
        this.listOfFriendGuest = listOfFriendGuest;
    }
    public List<FriendEntity> getListOfFriendGuest() {
        return this.listOfFriendGuest;
    }

    public void setListOfIscrizioni( List<IscrizioniEntity> listOfIscrizioni ) {
        this.listOfIscrizioni = listOfIscrizioni;
    }
    public List<IscrizioniEntity> getListOfIscrizioni() {
        return this.listOfIscrizioni;
    }

    public void setUserAccount( UserAccountEntity userAccount ) {
        this.userAccount = userAccount;
    }
    public UserAccountEntity getUserAccount() {
        return this.userAccount;
    }

    public void setListOfFriendHost( List<FriendEntity> listOfFriendHost ) {
        this.listOfFriendHost = listOfFriendHost;
    }
    public List<FriendEntity> getListOfFriendHost() {
        return this.listOfFriendHost;
    }

    public void setListOfTorneo( List<TorneoEntity> listOfTorneo ) {
        this.listOfTorneo = listOfTorneo;
    }
    public List<TorneoEntity> getListOfTorneo() {
        return this.listOfTorneo;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(nome);
        sb.append("|");
        sb.append(responsabile);
        sb.append("|");
        sb.append(via);
        sb.append("|");
        sb.append(cap);
        sb.append("|");
        sb.append(citta);
        sb.append("|");
        sb.append(provincia);
        sb.append("|");
        sb.append(nazione);
        sb.append("|");
        sb.append(tel);
        sb.append("|");
        sb.append(fax);
        sb.append("|");
        sb.append(cellulare);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(url);
        sb.append("|");
        sb.append(logo);
        return sb.toString(); 
    } 

}
