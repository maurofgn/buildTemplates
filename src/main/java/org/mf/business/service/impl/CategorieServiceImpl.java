/*
 * Created on 8 set 2016 ( Time 16:09:31 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 * 
 */
package org.mf.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.mf.bean.Categorie;
import org.mf.bean.jpa.CategorieEntity;
import org.mf.business.service.CategorieService;
import org.mf.business.service.mapping.CategorieServiceMapper;
import org.mf.data.repository.jpa.CategorieJpaRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.convert.converter.Converter;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.domain.Sort.Order;
import org.springframework.data.domain.Sort.Direction;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;


/**
 * Implementation of CategorieService
 *
 */
@Service("categorieService")
@Transactional
public class CategorieServiceImpl implements CategorieService {

	@Autowired
	private CategorieJpaRepository categorieJpaRepository;

	@Autowired
	private CategorieServiceMapper categorieServiceMapper;
	
	@Override
	public Categorie findById(Integer id) {
		CategorieEntity categorieEntity = categorieJpaRepository.findOne(id);
		return categorieServiceMapper.mapCategorieEntityToCategorie(categorieEntity);
	}

	@Override
	public Page<Categorie> findAll(Pageable pageRequest) {
		
		if (pageRequest == null)
			pageRequest = new PageRequest(
				  0, 10
				  , new Sort(new Order(Direction.ASC, "categoria"), new Order(Direction.DESC, "annomin"))	//only for example
				);
		
		Page<CategorieEntity> pageEntity = categorieJpaRepository.findAll(pageRequest);
		
//		Page<Categorie> page = pageEntity.map(this::convertToCategorie);	//method reference. need at least java 8
		Page<Categorie> page = pageEntity.map(new Converter<CategorieEntity, Categorie>() {
					@Override
					public Categorie convert(CategorieEntity categorieEntity) {
						return categorieServiceMapper.mapCategorieEntityToCategorie(categorieEntity);
					}
				});
		
		return page;
	}

	@Override
	public List<Categorie> findAll() {
		Iterable<CategorieEntity> entities = categorieJpaRepository.findAll();
		List<Categorie> beans = new ArrayList<Categorie>();
		for(CategorieEntity categorieEntity : entities) {
			beans.add(categorieServiceMapper.mapCategorieEntityToCategorie(categorieEntity));
		}
		return beans;
	}

	@Override
	public Categorie save(Categorie categorie) {
		return update(categorie) ;
	}

	@Override
	public Categorie create(Categorie categorie) {
		CategorieEntity categorieEntity = null;
		if (categorie.getId() != null) {
			categorieEntity = categorieJpaRepository.findOne(categorie.getId());
			if( categorieEntity != null ) {
				throw new IllegalStateException("already.exists");
			}
		}
		categorieEntity = new CategorieEntity();
		categorieServiceMapper.mapCategorieToCategorieEntity(categorie, categorieEntity);
		CategorieEntity categorieEntitySaved = categorieJpaRepository.save(categorieEntity);
		return categorieServiceMapper.mapCategorieEntityToCategorie(categorieEntitySaved);
	}

	@Override
	public Categorie update(Categorie categorie) {
		CategorieEntity categorieEntity = categorieJpaRepository.findOne(categorie.getId());
		categorieServiceMapper.mapCategorieToCategorieEntity(categorie, categorieEntity);
		CategorieEntity categorieEntitySaved = categorieJpaRepository.save(categorieEntity);
		return categorieServiceMapper.mapCategorieEntityToCategorie(categorieEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		categorieJpaRepository.delete(id);
	}

	@Override
	public Long count() {
		return categorieJpaRepository.count();
	}

	public CategorieJpaRepository getCategorieJpaRepository() {
		return categorieJpaRepository;
	}

	public void setCategorieJpaRepository(CategorieJpaRepository categorieJpaRepository) {
		this.categorieJpaRepository = categorieJpaRepository;
	}

	public CategorieServiceMapper getCategorieServiceMapper() {
		return categorieServiceMapper;
	}

	public void setCategorieServiceMapper(CategorieServiceMapper categorieServiceMapper) {
		this.categorieServiceMapper = categorieServiceMapper;
	}

}
