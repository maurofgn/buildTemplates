/*
 * Created on 22 lug 2016 ( Time 17:15:34 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.mf.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.mf.bean.Categorie;
import org.mf.bean.jpa.CategorieEntity;
import org.mf.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class CategorieServiceMapperTest {

	private CategorieServiceMapper categorieServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		categorieServiceMapper = new CategorieServiceMapper();
		categorieServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'CategorieEntity' to 'Categorie'
	 * @param categorieEntity
	 */
	@Test
	public void testMapCategorieEntityToCategorie() {
		// Given
		CategorieEntity categorieEntity = new CategorieEntity();
		categorieEntity.setCategoria(mockValues.nextString(30));
		categorieEntity.setAnnomin(mockValues.nextInteger());
		categorieEntity.setAnnomax(mockValues.nextInteger());
		categorieEntity.setPunti(mockValues.nextInteger());
		categorieEntity.setPuntimax(mockValues.nextInteger());
		categorieEntity.setNrset(mockValues.nextInteger());
		categorieEntity.setNote(mockValues.nextString(255));
		categorieEntity.setActive(mockValues.nextBoolean());
		categorieEntity.setCategoriecol(mockValues.nextString(45));
		
		// When
		Categorie categorie = categorieServiceMapper.mapCategorieEntityToCategorie(categorieEntity);
		
		// Then
		assertEquals(categorieEntity.getCategoria(), categorie.getCategoria());
		assertEquals(categorieEntity.getAnnomin(), categorie.getAnnomin());
		assertEquals(categorieEntity.getAnnomax(), categorie.getAnnomax());
		assertEquals(categorieEntity.getPunti(), categorie.getPunti());
		assertEquals(categorieEntity.getPuntimax(), categorie.getPuntimax());
		assertEquals(categorieEntity.getNrset(), categorie.getNrset());
		assertEquals(categorieEntity.getNote(), categorie.getNote());
		assertEquals(categorieEntity.getActive(), categorie.getActive());
		assertEquals(categorieEntity.getCategoriecol(), categorie.getCategoriecol());
	}
	
	/**
	 * Test : Mapping from 'Categorie' to 'CategorieEntity'
	 */
	@Test
	public void testMapCategorieToCategorieEntity() {
		// Given
		Categorie categorie = new Categorie();
		categorie.setCategoria(mockValues.nextString(30));
		categorie.setAnnomin(mockValues.nextInteger());
		categorie.setAnnomax(mockValues.nextInteger());
		categorie.setPunti(mockValues.nextInteger());
		categorie.setPuntimax(mockValues.nextInteger());
		categorie.setNrset(mockValues.nextInteger());
		categorie.setNote(mockValues.nextString(255));
		categorie.setActive(mockValues.nextBoolean());
		categorie.setCategoriecol(mockValues.nextString(45));

		CategorieEntity categorieEntity = new CategorieEntity();
		
		// When
		categorieServiceMapper.mapCategorieToCategorieEntity(categorie, categorieEntity);
		
		// Then
		assertEquals(categorie.getCategoria(), categorieEntity.getCategoria());
		assertEquals(categorie.getAnnomin(), categorieEntity.getAnnomin());
		assertEquals(categorie.getAnnomax(), categorieEntity.getAnnomax());
		assertEquals(categorie.getPunti(), categorieEntity.getPunti());
		assertEquals(categorie.getPuntimax(), categorieEntity.getPuntimax());
		assertEquals(categorie.getNrset(), categorieEntity.getNrset());
		assertEquals(categorie.getNote(), categorieEntity.getNote());
		assertEquals(categorie.getActive(), categorieEntity.getActive());
		assertEquals(categorie.getCategoriecol(), categorieEntity.getCategoriecol());
	}

}